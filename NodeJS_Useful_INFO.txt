__dirname -> path to current directory (console.log(__dirname) shows that if you want)

__filename -> file name

require -> function to use modules

module -> info about current module (file)

process -> info about the env where the program is being executed

Example of using setInterval():
            setInterval(() => {
	 	   console.log('Hello, world!')
		}, 1000); - the message is printed every second

!!! Every file in nodeJs is a module

BUILT IN MODULES: (os, fs, path, http etc.)

npm init -y -> creates the package.json with default values for all the fields

nodemon -> whatches our files and restart the server everytime we make a change

!!Read about dependencies vs devDependencies in package.json (i think devDependencies
stands for the application development process only and in production, just the
dependencies are needed)


How do we get Node to evaluate our code? - we have two options:
	REPL - for playing around -> "ctrl + c" to close the REPL
	CLI - for everything else (you want to use this when you master NodeJS)
	
`` - these are template strings

a package, essentially, is a folder that contains some JS code

package = dependencies = modules

With event loop, you can offload some time consuming operations
(this is the asynchronous approach)